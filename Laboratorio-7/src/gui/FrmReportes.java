/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import static com.itextpdf.text.FontFactory.TIMES_BOLD;
import com.itextpdf.text.Image;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Alumno
 */
public class FrmReportes extends javax.swing.JFrame {

    /**
     * Creates new form FrmReportes
     */
    public FrmReportes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnEnviar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtSalida = new javax.swing.JTextArea();
        btnImprimir = new javax.swing.JButton();
        btnImprimir1 = new javax.swing.JButton();
        btnImprimir2 = new javax.swing.JButton();
        btnImprimir3 = new javax.swing.JButton();
        btnImprimir4 = new javax.swing.JButton();
        btnImprimi5 = new javax.swing.JButton();
        btnImprimir6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("REPORTES");

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        txtSalida.setColumns(20);
        txtSalida.setRows(5);
        jScrollPane1.setViewportView(txtSalida);

        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnImprimir1.setText("Imprimir-1");
        btnImprimir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimir1ActionPerformed(evt);
            }
        });

        btnImprimir2.setText("Imprimir-2");
        btnImprimir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimir2ActionPerformed(evt);
            }
        });

        btnImprimir3.setText("Imprimir-3");
        btnImprimir3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimir3ActionPerformed(evt);
            }
        });

        btnImprimir4.setText("Imprimir-4");
        btnImprimir4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimir4ActionPerformed(evt);
            }
        });

        btnImprimi5.setText("Imprimir-5");
        btnImprimi5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimi5ActionPerformed(evt);
            }
        });

        btnImprimir6.setText("Imprimir-6");
        btnImprimir6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimir6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEnviar)
                            .addComponent(btnImprimir4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(btnImprimir)
                                .addGap(18, 18, 18)
                                .addComponent(btnImprimir1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnImprimi5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnImprimir6)))
                        .addGap(18, 18, 18)
                        .addComponent(btnImprimir2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImprimir3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnviar)
                    .addComponent(btnImprimir)
                    .addComponent(btnImprimir1)
                    .addComponent(btnImprimir2)
                    .addComponent(btnImprimir3))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimir4)
                    .addComponent(btnImprimi5)
                    .addComponent(btnImprimir6))
                .addGap(95, 95, 95)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        txtSalida.append("REPORTE DE VENTAS " + "\n");
        txtSalida.append("--------------------------------------------------" + "\n");
        txtSalida.append("Total articulos: 50 " + "\n");
        txtSalida.append("Total soles: 1500.00 " + "\n");
        txtSalida.append("Total IGV: 250.00 " + "\n");
        txtSalida.append("Total Generar: 1750.00 " + "\n");
        txtSalida.append("------------------------------------------------ " + "\n");

    }//GEN-LAST:event_btnEnviarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        try {
            txtSalida.print();
        } catch (Exception e) {
            System.err.println("ERROR" + e);
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnImprimir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimir1ActionPerformed

        try {
            Document documento = new Document();
            PdfWriter.getInstance(documento, new FileOutputStream("D:\\Listado1.pdf"));
            documento.open();
            documento.add(new Paragraph("LISTADO DE PERSONAL"));
            documento.add(new Paragraph("--------------------"));
            documento.add(new Paragraph(new Date().toString()));

            documento.close();

            JOptionPane.showMessageDialog(rootPane, "REPORTE PDF. GENERADO CON EXITO");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "OCURRIO UN ERROR:" + e, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnImprimir1ActionPerformed

    private void btnImprimir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimir2ActionPerformed

        try {
            Document documento = new Document();
            PdfWriter.getInstance(documento, new FileOutputStream("D:\\Listado2.pdf"));
            documento.open();
            documento.add(new Paragraph("LISTADO DE PERSONAL"));
            documento.add(new Paragraph("--------------------"));
            documento.add(new Paragraph(new Date().toString()));
            Paragraph titulo = new Paragraph("SEDE LIMA-2025", FontFactory.getFont(TIMES_BOLD, 18, Font.BOLDITALIC, BaseColor.BLUE));
            titulo.setAlignment(Element.ALIGN_CENTER);
            documento.add(titulo);

            documento.close();

            JOptionPane.showMessageDialog(rootPane, "REPORTE PDF. GENERADO CON EXITO");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "OCURRIO UN ERROR:" + e, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnImprimir2ActionPerformed

    private void btnImprimir3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimir3ActionPerformed

        try {
            Document documento = new Document();
            PdfWriter.getInstance(documento, new FileOutputStream("D:\\Listado3.pdf"));
            documento.open();
            documento.add(new Paragraph("LISTADO DE PERSONAL"));
            documento.add(new Paragraph("--------------------"));
            documento.add(new Paragraph(new Date().toString()));
            Paragraph titulo = new Paragraph("SEDE LIMA-2025", FontFactory.getFont(TIMES_BOLD, 18, Font.BOLDITALIC, BaseColor.BLUE));
            titulo.setAlignment(Element.ALIGN_CENTER);
            documento.add(titulo);
            List lista = new List(List.ORDERED);
            lista.add(new ListItem("AREA DE CONTABILIDAD"));
            lista.add(new ListItem("AREA DE MARKETING"));
            lista.add(new ListItem("AREA DE SISTEMAS"));
            lista.add(new ListItem("AREA DE RECURSOS HUMANOS"));
            documento.add(lista);
            List lista1 = new List(List.UNORDERED);
            lista1.add(new ListItem("LIMA"));
            lista1.add(new ListItem("PIURA"));
            lista1.add(new ListItem("TACNA"));
            lista1.add(new ListItem("TRUJILLO"));
            documento.add(lista1);
            documento.close();

            JOptionPane.showMessageDialog(rootPane, "REPORTE PDF. GENERADO CON EXITO");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "OCURRIO UN ERROR:" + e, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnImprimir3ActionPerformed

    private void btnImprimir4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimir4ActionPerformed
        try {
            Document documento = new Document();
            PdfWriter.getInstance(documento, new FileOutputStream("D:\\Listado4.pdf"));
            documento.open();
            documento.add(new Paragraph("LISTADO DE PERSONAL"));
            documento.add(new Paragraph("--------------------"));
            documento.add(new Paragraph(new Date().toString()));
            Paragraph titulo = new Paragraph("SEDE LIMA-2025", FontFactory.getFont(TIMES_BOLD, 18, Font.BOLDITALIC, BaseColor.BLUE));
            titulo.setAlignment(Element.ALIGN_CENTER);
            documento.add(titulo);
            List lista = new List(List.ORDERED);
            lista.add(new ListItem("AREA DE CONTABILIDAD"));
            lista.add(new ListItem("AREA DE MARKETING"));
            lista.add(new ListItem("AREA DE SISTEMAS"));
            lista.add(new ListItem("AREA DE RECURSOS HUMANOS"));
            documento.add(lista);
            List lista1 = new List(List.UNORDERED);
            lista1.add(new ListItem("LIMA"));
            lista1.add(new ListItem("PIURA"));
            lista1.add(new ListItem("TACNA"));
            lista1.add(new ListItem("TRUJILLO"));
            documento.add(lista1);

            PdfPTable table = new PdfPTable(2);
            table.addCell("CODIGO");
            table.addCell("NOMBRE");
            table.addCell("A00001");
            table.addCell("JUANITO");
            table.addCell("A00002");
            table.addCell("TERESA");
            table.addCell("A00003");
            table.addCell("CARLOS");
            table.addCell("A00004");
            table.addCell("MARIA");
            table.addCell("----------------------");
            documento.add(table);
            documento.close();

            JOptionPane.showMessageDialog(rootPane, "REPORTE PDF. GENERADO CON EXITO");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "OCURRIO UN ERROR:" + e, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnImprimir4ActionPerformed

    private void btnImprimi5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimi5ActionPerformed
        try {
            Document documento = new Document();
            PdfWriter.getInstance(documento, new FileOutputStream("D:\\Listado5.pdf"));
            documento.open();
            documento.add(new Paragraph("LISTADO DE PERSONAL"));
            documento.add(new Paragraph("--------------------"));
            documento.add(new Paragraph(new Date().toString()));
            Paragraph titulo = new Paragraph("SEDE LIMA-2025", FontFactory.getFont(TIMES_BOLD, 18, Font.BOLDITALIC, BaseColor.BLUE));
            titulo.setAlignment(Element.ALIGN_CENTER);
            documento.add(titulo);
            List lista = new List(List.ORDERED);
            lista.add(new ListItem("AREA DE CONTABILIDAD"));
            lista.add(new ListItem("AREA DE MARKETING"));
            lista.add(new ListItem("AREA DE SISTEMAS"));
            lista.add(new ListItem("AREA DE RECURSOS HUMANOS"));
            documento.add(lista);
            List lista1 = new List(List.UNORDERED);
            lista1.add(new ListItem("LIMA"));
            lista1.add(new ListItem("PIURA"));
            lista1.add(new ListItem("TACNA"));
            lista1.add(new ListItem("TRUJILLO"));
            documento.add(lista1);

            PdfPTable table = new PdfPTable(2);

            PdfPCell cel1 = new PdfPCell(new Paragraph("Codigo"));
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            cel1.setBackgroundColor(BaseColor.BLUE);
            PdfPCell cel2 = new PdfPCell(new Paragraph("Nombre"));
            cel2.setHorizontalAlignment(Element.ALIGN_CENTER);
            cel2.setBackgroundColor(BaseColor.YELLOW);

            table.addCell(cel1);
            table.addCell(cel2);
            table.addCell("A00001");
            table.addCell("JUANITO");
            table.addCell("A00002");
            table.addCell("TERESA");
            table.addCell("A00003");
            table.addCell("CARLOS");
            table.addCell("A00004");
            table.addCell("MARIA");
            table.addCell("----------------------");
            documento.add(table);
            documento.close();

            JOptionPane.showMessageDialog(rootPane, "REPORTE PDF. GENERADO CON EXITO");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "OCURRIO UN ERROR:" + e, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnImprimi5ActionPerformed

    private void btnImprimir6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimir6ActionPerformed
        try {
            
            Document documento = new Document();
            PdfWriter.getInstance(documento, new FileOutputStream("C:\\pdf-java\\Listado6.pdf"));
            documento.open();
            Image logo=Image.getInstance("C:\\pdf-java\\image.png");
            logo.setAlignment(Element.ALIGN_LEFT);
            documento.add(logo);
            documento.add(new Paragraph("LISTADO DE PERSONAL"));
            documento.add(new Paragraph("--------------------"));
            documento.add(new Paragraph(new Date().toString()));
            Paragraph titulo = new Paragraph("SEDE LIMA-2025", FontFactory.getFont(TIMES_BOLD, 18, Font.BOLDITALIC, BaseColor.BLUE));
            titulo.setAlignment(Element.ALIGN_CENTER);
            documento.add(titulo);
            List lista = new List(List.ORDERED);
            lista.add(new ListItem("AREA DE CONTABILIDAD"));
            lista.add(new ListItem("AREA DE MARKETING"));
            lista.add(new ListItem("AREA DE SISTEMAS"));
            lista.add(new ListItem("AREA DE RECURSOS HUMANOS"));
            documento.add(lista);
            List lista1 = new List(List.UNORDERED);
            lista1.add(new ListItem("LIMA"));
            lista1.add(new ListItem("PIURA"));
            lista1.add(new ListItem("TACNA"));
            lista1.add(new ListItem("TRUJILLO"));
            documento.add(lista1);

            PdfPTable table = new PdfPTable(2);

            PdfPCell cel1 = new PdfPCell(new Paragraph("Codigo"));
            cel1.setHorizontalAlignment(Element.ALIGN_CENTER);
            cel1.setBackgroundColor(BaseColor.BLUE);
            PdfPCell cel2 = new PdfPCell(new Paragraph("Nombre"));
            cel2.setHorizontalAlignment(Element.ALIGN_CENTER);
            cel2.setBackgroundColor(BaseColor.YELLOW);

            table.addCell(cel1);
            table.addCell(cel2);
            table.addCell("A00001");
            table.addCell("JUANITO");
            table.addCell("A00002");
            table.addCell("TERESA");
            table.addCell("A00003");
            table.addCell("CARLOS");
            table.addCell("A00004");
            table.addCell("MARIA");
            table.addCell("----------------------");
            documento.add(table);
            documento.close();

            JOptionPane.showMessageDialog(rootPane, "REPORTE PDF. GENERADO CON EXITO");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "OCURRIO UN ERROR:" + e, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnImprimir6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmReportes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnImprimi5;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnImprimir1;
    private javax.swing.JButton btnImprimir2;
    private javax.swing.JButton btnImprimir3;
    private javax.swing.JButton btnImprimir4;
    private javax.swing.JButton btnImprimir6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtSalida;
    // End of variables declaration//GEN-END:variables
}
